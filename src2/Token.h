#pragma once

#include "StringView.h"
#include "Array.h"

typedef enum
{
	// Operators and punctuators
	TOKEN_LEFT_BRACKET,
	TOKEN_RIGHT_BRACKET,
	TOKEN_LEFT_BRACE,
	TOKEN_RIGHT_BRACE,
	TOKEN_LEFT_PAREN,
	TOKEN_RIGHT_PAREN,
	TOKEN_DOT,
	TOKEN_DOT_DOT_DOT,
	TOKEN_PLUS,
	TOKEN_PLUS_EQUALS,
	TOKEN_PLUS_PLUS,
	TOKEN_MINUS,
	TOKEN_MINUS_EQUALS,
	TOKEN_MINUS_MINUS,
	TOKEN_ARROW,
	TOKEN_AND,
	TOKEN_AND_AND,
	TOKEN_AND_EQUALS,
	TOKEN_LESS,
	TOKEN_LESS_EQUALS,
	TOKEN_SHIFT_LEFT,
	TOKEN_SHIFT_LEFT_EQUALS,
	TOKEN_MORE,
	TOKEN_MORE_EQUALS,
	TOKEN_SHIFT_RIGHT,
	TOKEN_SHIFT_RIGHT_EQUALS,
	TOKEN_TILDE,
	TOKEN_OR,
	TOKEN_OR_EQUALS,
	TOKEN_OR_OR,
	TOKEN_SLASH,
	TOKEN_SLASH_EQUALS,
	TOKEN_PERCENT,
	TOKEN_PERCENT_EQUALS,
	TOKEN_STAR,
	TOKEN_STAR_EQUALS,
	TOKEN_XOR,
	TOKEN_XOR_EQUALS,
	TOKEN_COLON,
	TOKEN_QUESTION,
	TOKEN_COMMA,
	TOKEN_EQUALS,
	TOKEN_EQUALS_EQUALS,
	TOKEN_BANG_EQUALS,
	TOKEN_BANG,
	TOKEN_SEMICOLON,

	// Keywords
	TOKEN_AUTO,
	TOKEN_BREAK,
	TOKEN_CASE,
	TOKEN_CHAR,
	TOKEN_CONST,
	TOKEN_CONTINUE,
	TOKEN_DEFAULT,
	TOKEN_DO,
	TOKEN_DOUBLE,
	TOKEN_ELSE,
	TOKEN_ENUM,
	TOKEN_EXTERN,
	TOKEN_FLOAT,
	TOKEN_FOR,
	TOKEN_GOTO,
	TOKEN_IF,
	TOKEN_INT,
	TOKEN_LONG,
	TOKEN_REGISTER,
	TOKEN_RETURN,
	TOKEN_SHORT,
	TOKEN_SIGNED,
	TOKEN_SIZEOF,
	TOKEN_STATIC,
	TOKEN_STRUCT,
	TOKEN_SWITCH,
	TOKEN_TYPEDEF,
	TOKEN_UNION,
	TOKEN_UNSIGNED,
	TOKEN_VOID,
	TOKEN_VOLATILE,
	TOKEN_WHILE,

	// Identifier
	TOKEN_IDENTIFIER,

	// Number constants
	TOKEN_INT_CONSTANT,
	TOKEN_UNSIGNED_INT_CONSTANT,
	TOKEN_LONG_CONSTANT,
	TOKEN_UNSIGNED_LONG_CONSTANT,
	TOKEN_LONG_LONG_CONSTANT,
	TOKEN_UNSIGNED_LONG_LONG_CONSTANT,
	TOKEN_FLOAT_CONSTANT,
	TOKEN_DOUBLE_CONSTANT,
	TOKEN_LONG_DOUBLE_CONSTANT,
	TOKEN_CHAR_CONSTANT,

	// String literal
	TOKEN_STRING_LITERAL,

	// Special tokens
	TOKEN_ERROR,
	TOKEN_EOF
}  TokenType;

typedef struct
{
	TokenType type;
	StringView text;
	size_t line;
} Token;

ARRAY_TEMPLATE_DECLARATION(TokenArray, Token)